{
	"info": {
		"_postman_id": "c2bd6887-611b-4ee1-a455-8c81987f4c51",
		"name": "PetClinic_Swagger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PCPetVisits",
			"item": [
				{
					"name": "visits",
					"item": [
						{
							"name": "Get Visits",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/visits",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"visits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Visits",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//var jsonData=pm.response.json();\r",
											"//pm.globals.set(\"visitId\",jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"id\": 0,\r\n        \"date\": \"2021/11/04\",\r\n        \"description\": \"Vaccine\",\r\n        \"pet\": {\r\n            \"id\": 7,\r\n            \"name\": \"Samantha\",\r\n            \"birthDate\": \"2012/09/04\",\r\n            \"type\": {\r\n                \"id\": 1,\r\n                \"name\": \"cat\"\r\n            },\r\n            \"owner\": {\r\n                \"id\": 6,\r\n                \"firstName\": \"Jean\",\r\n                \"lastName\": \"Coleman\",\r\n                \"address\": \"105 N. Lake St.\",\r\n                \"city\": \"Monona\",\r\n                \"telephone\": \"6085552654\"\r\n            }\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/visits",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"visits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete visits",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete pet visit Status code is 204\",() => pm.response.to.have.status(204));\r",
											"\r",
											"var url = pm.environment.get(\"url\") + \"/visits/\" +  pm.environment.get(\"visitId\");\r",
											"\r",
											"const getRequest = {\r",
											"        url: url,\r",
											"        method: 'GET'\r",
											"};\r",
											"pm.sendRequest(getRequest, function (err, res) {\r",
											"    if (err) { \r",
											"        console.log(err);\r",
											"    }\r",
											"     console.log(res);\r",
											"    \r",
											"    pm.test('Visit Response Should Be Not Found', function () {\r",
											"        pm.expect(res.status).to.include(\"Not Found\");\r",
											"    });\r",
											"    \r",
											"    pm.test(\"Visit Response Code 404\", function() {\r",
											"        pm.expect(res.code).to.equal(404);\r",
											"    })\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/visits/{{visitId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"visits",
										"{{visitId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "PCVets",
			"item": [
				{
					"name": "Add Vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"vetId\", jsonData.id);\r",
									"\r",
									"pm.test(\"Successfully Created Vet / Status Code 201 \", () => pm.response.to.have.status(201));\r",
									"pm.test(\"Verify if Response time Should be below 1s\",() => pm.expect(pm.response.responseTime).to.be.below(1000));\r",
									" \r",
									"pm.test(\"Verify if Created Vet is added in the Database\", function () {\r",
									"     pm.expect(pm.response.text()).to.include(\"id\");\r",
									"     });\r",
									"\r",
									"pm.test(\"Assert that the correct type of data is stored in the new object\", () => {\r",
									"  pm.expect(jsonData).to.be.an(\"object\");\r",
									"  pm.expect(jsonData.firstName).to.be.a(\"string\");\r",
									"  pm.expect(jsonData.lastName).to.be.a(\"string\");\r",
									"  pm.expect(jsonData.specialties).to.be.an(\"array\");\r",
									" });\r",
									"\r",
									" pm.test(\"Verify Information of New Vet Added\", function () {\r",
									"    pm.expect(jsonData.firstName).to.eql(pm.environment.get(\"VetFirstNameP\"));\r",
									"    pm.expect(jsonData.lastName).to.eql(pm.environment.get(\"VetLastNameP\"));\r",
									"    pm.expect(jsonData.specialties[0].id).to.eql(parseInt(pm.environment.get(\"SpecialityId\")));\r",
									"    pm.expect(jsonData.specialties[0].name).to.eql(pm.environment.get(\"SpecialityName\"));\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"firstName\": \"{{VetFirstNameP}}\",\r\n    \"lastName\": \"{{VetLastNameP}}\",\r\n    \"specialties\": [\r\n      {\r\n        \"id\": {{SpecialityId}},\r\n        \"name\": \"{{SpecialityName}}\"\r\n      }\r\n    ]\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/vets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"vets"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}